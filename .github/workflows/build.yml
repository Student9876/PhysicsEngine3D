name: Build

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            preset: linux-release
            executable_name: PhysicsEngine3D
          - os: windows-latest
            preset: x64-release
            executable_name: PhysicsEngine3D.exe
          - os: macos-latest
            preset: macos-release
            executable_name: PhysicsEngine3D

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: '2024.07.12'

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake

    - name: Setup MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      run: cmake --preset ${{ matrix.preset }}

    - name: Build
      run: cmake --build out/build/${{ matrix.preset }}

    - name: Test
      if: matrix.os != 'windows-latest'
      run: |
        chmod +x out/build/${{ matrix.preset }}/PhysicsEngine3D/${{ matrix.executable_name }}
        out/build/${{ matrix.preset }}/PhysicsEngine3D/${{ matrix.executable_name }} --version || true

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: PhysicsEngine3D-${{ matrix.os }}
        path: |
          out/build/${{ matrix.preset }}/PhysicsEngine3D/${{ matrix.executable_name }}
        retention-days: 7